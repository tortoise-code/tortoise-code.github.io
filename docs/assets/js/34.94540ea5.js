(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{316:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"镜像image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像image"}},[s._v("#")]),s._v(" 镜像image")]),s._v(" "),a("p",[s._v("使docker下载的东西是镜像(可以理解为系统软件包)")]),s._v(" "),a("p",[s._v("下载镜像")]),s._v(" "),a("blockquote",[a("p",[s._v("docker pull ubuntu")])]),s._v(" "),a("p",[s._v("查看当前已经下载的镜像")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n")])])]),a("h2",{attrs:{id:"容器container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器container"}},[s._v("#")]),s._v(" 容器container")]),s._v(" "),a("p",[s._v("通过docker启动的镜像叫做容器(可以理解为安装到电脑上的系统)")]),s._v(" "),a("p",[s._v("docker可以用一个镜像启动很多容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run ubuntun\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker创建的所有容器 含未启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器 已启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),a("h2",{attrs:{id:"容器使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器使用"}},[s._v("#")]),s._v(" 容器使用")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入指定容器内部")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" 容器名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("容器ID /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop 容器名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("容器ID\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动指定容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart 容器名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("容器ID\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);